setenv bootargs ''

setenv updatehub_load_os_a "load mmc 1:2 ${kernel_addr_r} boot/${boot_file};
 setenv dtbparam; load mmc 1:2 ${fdt_addr_r} boot/${fdt_file} &&
 setenv dtbparam - ${fdt_addr_r}; run fdt_fixup"
setenv updatehub_find_root_a part uuid mmc 1:2 uuid

setenv updatehub_load_os_b "load mmc 1:3 ${kernel_addr_r} boot/${boot_file};
 setenv dtbparam; load mmc 1:3 ${fdt_addr_r} boot/${fdt_file} &&
 setenv dtbparam - ${fdt_addr_r}; run fdt_fixup"
setenv updatehub_find_root_b part uuid mmc 1:3 uuid

if itest.s "x" == "x${updatehub_active}" ; then
    echo Ensuring environment is accessible in Linux...
    setenv updatehub_active 0
    saveenv
fi

if itest.s "${updatehub_active}" == 0 ; then
    echo Loading system from A
    run updatehub_find_root_a updatehub_load_os_a

    run setup; setenv bootargs ${defargs} ip=off root=PARTUUID=${uuid} rw rootfstype=ext4 rootwait ${setupargs} ${vidargs}
    bootz ${kernel_addr_r} ${dtbparam}

else
    if itest.s "${updatehub_active}" == 1 ; then
        echo Loading system from B
        run updatehub_find_root_b updatehub_load_os_b

        run setup; setenv bootargs ${defargs} ip=off root=PARTUUID=${uuid} rw rootfstype=ext4 rootwait ${setupargs} ${vidargs}
        bootz ${kernel_addr_r} ${dtbparam}

    else
        echo Invalid updatehub_active value, resetting it
        setenv updatehub_active 0
        saveenv
        reset
    fi
fi
